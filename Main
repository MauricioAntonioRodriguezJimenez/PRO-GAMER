package proyecto.programacion;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Scanner;

/*
Programadores:
Gabriel Fernando García Lemus
Mauricio Antonio Rodríguez Jiménez 

*/
public class ProyectoProgramacion {

    public static void main(String[] args) {

        int xr;
        Scanner s = new Scanner(System.in);

        do {
            xr = menu();
            switch (xr) {
                
                //Agregación de Elementos en la Lista de Productos
                case 1:
                    ArrayList listaProductos = new ArrayList();
                    listaProductos.add("Intel i5 2400");
                    listaProductos.add("SSD 500 GB");
                    listaProductos.add("Memoria RAM 8 GB");
                    listaProductos.add("NVIDIA GTX1660");
                    listaProductos.add("Teclado K16");

                    System.out.println("Esta es la lista de Productos: " + listaProductos.toString());
                    System.out.println("Agregue un Producto Nuevo: ");
                    String nuevoProducto = s.nextLine();
                    listaProductos.add(0, nuevoProducto);
                    System.out.println("La lista actualizada: " + listaProductos.toString());

                    break;

                 //Edición de Elementos en la Lista de Productos
                case 2:
                    ArrayList listaProducto = new ArrayList();
                    listaProducto.add("Intel i5 2400");
                    listaProducto.add("SSD 500 GB");
                    listaProducto.add("Memoria RAM 8 GB");
                    listaProducto.add("NVIDIA GTX1660");
                    listaProducto.add("Teclado K16");

                    String editarProducto;
                    int lugar;
                    System.out.println("Esta es la lista de Productos: " + listaProducto.toString());

                    System.out.println("Ingrese la posición del Producto: ");
                    lugar = s.nextInt();
                    lugar = lugar - 1;
                    Scanner editar = new Scanner(System.in);
                    System.out.println("Ingrese el cambio al Producto: ");
                    editarProducto = editar.nextLine();
                    listaProducto.set(lugar, editarProducto);
                    System.out.println("Lista de productos actualizada: " + listaProducto.toString());

                    break;
                    
                //Eliminación de Elementos en la Lista de Productos
                case 3:
                    ArrayList eliminarProducto = new ArrayList();
                    eliminarProducto.add("Intel i5 2400");
                    eliminarProducto.add("SSD 500 GB");
                    eliminarProducto.add("Memoria RAM 8 GB");
                    eliminarProducto.add("NVIDIA GTX1660");
                    eliminarProducto.add("Teclado K16");

                    System.out.println("Lista de Productos: " + eliminarProducto.toString());
                    System.out.println("Ingrese el producto que desea eliminar: "); 
                    String eliminado = s.nextLine();
                    if (eliminarProducto.remove(eliminado)){
                    System.out.println("Lista Actualizada: " + eliminarProducto.toString());
                   } else  {
                       System.out.println("Ese Producto no existe en la lista");
                   }
                    break;

               //Ordenamiento de los ID con Método Burbuja
                case 4:

                    int IDEmpleado[] = {3320, 78393, 2332, 1113, 432, 2212, 4422};
                    System.out.println("Lista de los ID de nuestros empleados :" + Arrays.toString(IDEmpleado));
                    IDEmpleado = ordenBurbujas(IDEmpleado);
                    System.out.println("Lista de los ID ordenados :" + Arrays.toString(IDEmpleado));
                    break;

                    
               //Ordenamiento de los precios con Método Selección
                case 5:
                
                    System.out.println("");
                    double precios[] = {55.60, 253.25, 49.99, 735.95, 74.99};
                    System.out.println("Lista de precios :" + Arrays.toString(precios));
                    precios = ordenSeleccion(precios);
                    System.out.println("Lista de los precios ordenados :" + Arrays.toString(precios));

                    break;
                    
                //Búsqueda Binaria de los ID
                case 6:
                    int posicions;
                    int IDEmpleados[] = {3320, 78393, 2332, 1113, 432, 2212, 4422};
                    IDEmpleados = ordenBurbujas(IDEmpleados);
                    System.out.println("Ingresa un ID a buscar:");
                    posicions = s.nextInt();
                    if (busquedaBinaria(IDEmpleados, posicions) == -1) {
                        System.out.println("EL ID que busca no existe! ");
                    } else {
                        System.out.println("El ID que busca se encuentra en la posición " + busquedaBinaria(IDEmpleados, posicions));
                    }
                    break;
                    
                 //Búsqueda Binaria de los Precios
                case 7:
                    double pos;
                    System.out.println("");
                    double precio[] = {55.60, 253.25, 49.99, 735.95, 74.99};
                    precio = ordenSeleccion(precio);
                    System.out.println("Ingresa un precio a buscar:");
                    pos = s.nextDouble();
                    if (busquedaBinariaDouble(precio, pos) == -1) {
                        System.out.println("El precio no existe! ");
                    } else {
                        System.out.println("El precio que busca se encuentra en la posicion " + busquedaBinariaDouble(precio, pos));
                    }
                    break;
                    
                case 8:
                    System.out.println("¡Gracias por la preferencia, vuelva pronto!");
 
            }

        } while (xr != 8);

    }

    
    //Metodo de Ordenamiento por Sellecion
    public static double[] ordenSeleccion(double[] a) {
        int indiceMenor, n;
        n = a.length;
        for (int i = 0; i < n - 1; i++) {
            indiceMenor = i;
            for (int j = i + 1; j < n; j++) {
                if (a[j] < a[indiceMenor]) {
                    indiceMenor = j;
                }
            }
            double temp = a[i];
            if (i != indiceMenor) {
                a[i] = a[indiceMenor];
                a[indiceMenor] = temp;
            }

        }
        return a;
    }

    //Metodo de Busqueda Binaria para arreglos tipo Int
    public static int busquedaBinaria(int[] a, int clave) {

        int central, alto, bajo;
        int valorCentral;
        bajo = 0;
        alto = a.length - 1;
        while (bajo <= alto) {
            central = (bajo + alto) / 2;
            valorCentral = a[central];
            if (clave == valorCentral) {
                return central;
            } else if (clave < valorCentral) {
                alto = central - 1;
            } else {
                bajo = central + 1;
            }

        }

        return -1;

    }
    
    //Metodo de Ordenamiento Buburja
    public static int[] ordenBurbujas(int[] a) {
        int n = a.length;
        for (int i = 0; i < n - 1; i++) {
            for (int j = 0; j < n - i - 1; j++) {

                if (a[j] > a[j + 1]) {
                    int temp = a[j];
                    a[j] = a[j + 1];
                    a[j + 1] = temp;
                }
            }
        }
        return a;
    }

    //Metodo de Busqueda Binaria para arreglos tipo Double
    public static int busquedaBinariaDouble(double[] a, double clave) {

        int central, alto, bajo;
        double valorCentral;
        bajo = 0;
        alto = a.length - 1;
        while (bajo <= alto) {
            central = (bajo + alto) / 2;
            valorCentral = a[central];
            if (clave == valorCentral) {
                return central;
            } else if (clave < valorCentral) {
                alto = central - 1;
            } else {
                bajo = central + 1;
            }

        }

        return -1;
    }

    //Menu para mejorar codigo en consola
    public static int menu() {
        int x;
        Scanner n = new Scanner(System.in);
        System.out.println("---------------------------------------------------------------------");
        System.out.println("MENÚ INICIAL\nSeleccione un número \n1.Agregar Producto \n2.Editar Productos \n3.Eliminar Producto \n4.Ver ID ordenados  \n5.Ver precios ordenados \n6.Busqueda ID \n7.Busqueda precio\n8.Salir");
        System.out.println("---------------------------------------------------------------------");
        System.out.print("Opción seleccionada: ");
        x = n.nextInt();
        System.out.println("---------------------------------------------------------------------");
        return x;
    }
}
